services:
  backend:
    container_name: 'backend_mg'
    build:
      context: .
    ports:
      - "8000:8000"
    networks:
      - MGNetwork
    env_file:
      - ".env"
    depends_on:
      - db
      - redis
    volumes:
      - C:\MGStalker\servers\StalkerRP\profiles\MindGamesStalker\PlayersDB:/app/PlayersDB
      - C:\MGStalker\servers\StalkerRP\profiles\MindGamesStalker:/app/MGStalker
      - C:\MGStalker\servers\StalkerRP\profiles\MindGamesStalker\Fractions:/app/Fractions

  celery_worker:
    container_name: 'celery_worker_mg'
    build:
      context: .
    networks:
      - MGNetwork
    env_file:
      - ".env"
    command: "celery --app=app.tasks.celery_app:celery_instance worker -l INFO --concurrency=10"
    depends_on:
      - db
      - redis
    volumes:
      - C:\MGStalker\servers\StalkerRP\profiles\MindGamesStalker\PlayersDB:/app/PlayersDB
      - C:\MGStalker\servers\StalkerRP\profiles\MindGamesStalker:/app/MGStalker
      - C:\MGStalker\servers\StalkerRP\profiles\MindGamesStalker\Fractions:/app/Fractions

  celery_beat:
    container_name: 'celery_beat_mg'
    build:
      context: .
    networks:
      - MGNetwork
    env_file:
      - ".env"
    command: "celery --app=app.tasks.celery_app:celery_instance beat -l INFO"
    depends_on:
      - db
      - redis
    volumes:
      - C:\MGStalker\servers\StalkerRP\profiles\MindGamesStalker\PlayersDB:/app/PlayersDB
      - C:\MGStalker\servers\StalkerRP\profiles\MindGamesStalker:/app/MGStalker
      - C:\MGStalker\servers\StalkerRP\profiles\MindGamesStalker\Fractions:/app/Fractions
  db:
    image: postgres:16
    container_name: 'postgres_mg'
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "MGFastAPI"
    ports:
      - "5435:5432"
    networks:
      - MGNetwork
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7.4
    container_name: 'redis_mg'
    ports:
      - "6379:6379"
    networks:
      - MGNetwork

  nginx:
    image: nginx:latest
    container_name: 'nginx_mg'
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - MGNetwork
    depends_on:
      - backend

networks:
  MGNetwork:
    external: true

volumes:
  postgres_data: